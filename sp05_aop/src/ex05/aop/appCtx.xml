<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
<!--  
콘솔 로그 출력 Advice 적용 순서
1.before
2.around (대상 메소드 수행 전)
3.대상 메소드 >> 주관심사
4.after-returning 
5.after(finally)
6.around (대상 메소드 수행 후)
-->
	<bean class="ex05.aop.CalcImpl" id="calc"/>
	<bean class="ex05.aop.LogPrintAroundAdvice" id="logPrintAroundAdvice"/>
	<bean class="ex05.aop.LogPrintBeforeAdvice" id="logPringBeforeAdvice"/>
	<bean class="ex05.aop.LogPrintThrowingAdvice" id="logPrintThrowingAdvice"/>
	<bean class="ex05.aop.LogPrintAfterAdvice" id="logPringAfterAdvice"/>
	
	<bean class="org.springframework.aop.framework.ProxyFactoryBean" id="proxy">
		<property name="proxyInterfaces">
			<list>
				<value>ex05.aop.ICalc</value><!-- 인터페이스 경로 -->
			</list>
		</property>
		
		<property name="target"><ref bean="calc"/></property>
		<property name="interceptorNames">			<!-- 보조관심사 -->
			<list>
				<!-- 
					여러 개의 보조 관심사 적용 가능함. 
					logPrintAroundAdvice, BeforeAdvice... 
					동시에 적용 가능
				-->
				<!-- <value>logPrintAroundAdvice</value>  --><!-- 핸들러 ID값 -->
				<!-- <value>logPringBeforeAdvice</value> --> 
				<!-- <value>LogPrintThrowingAdvice</value> --> 
				<value>logPringAfterAdvice</value> 
			</list>
		</property>
		
	</bean>
</beans>
